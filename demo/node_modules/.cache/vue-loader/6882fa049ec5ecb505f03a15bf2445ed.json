{"remainingRequest":"C:\\workspace\\demo\\demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\demo\\demo\\src\\views\\tw.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\workspace\\demo\\demo\\src\\views\\tw.vue","mtime":1571396084909},{"path":"C:\\workspace\\demo\\demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\demo\\demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport axios from 'axios'\n\n\nexport default {\n\n  name: \"message\",\n  data () {\n    return {\n      message: '',\n      //refererURL : \"/\"\n    }\n  },\n  created: async function () {\n    await this.refresh()\n  },\n  methods: {\n\n\n    refresh: async function () {\n\n      var fsgCryptogram = this.$route.params.fsgCryptogram;\n      //this.refererURL =\"http://localhost:8888//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n      //this.refererURL =\"http://fusetter.com//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n\n\n      //TODO ${fsgCryptogram}で書き換えられそう\n      var base_url = 'http://localhost:8888//FussageGetByFsgCryptogram//'\n      var forwardUrl = base_url + fsgCryptogram;\n\n      //TODO ここ共通関数化する。自作エラーのみ（JSONにメッセージがあるとか）\n      var parent = this;\n      axios({\n          method  : 'GET',\n          url     : forwardUrl,\n          // 500系以外は正常として扱う（thenで処理できるようにする）.\n          validateStatus: function (status) {\n              return status < 500;\n          },\n      })\n      .then(function (response) {\n      \tif(response.status === 404){\n\n      \t\t//Debug用出力ログ\n      \t\t//console.log(response);\n              //parent.message = response.data.status + \":\" + response.data.error + \":\" + response.data.message;\n\n              //404エラーページに遷移\n              parent.$router.push(\"/404\")\n\n      \t}else{\n      \t\tconsole.log(response);\n\n      \t\tif(response.data.show_auth){\n\n              \tparent.message = response.data.turnTweet\n\n      \t\t}else{\n\n      \t\t\tparent.message = response.data.originalTweet\n\n      \t\t}\n\n      \t}\n      })\n      .catch(function (error) {\n      \tconsole.log(error);\n      \tparent.message = error.message;\n      });\n\n    },\n\n    logoutClick: function(event){\n\n    \tvar refererURL =\"http://localhost:8888//logout?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n\n    \taxios({\n            method  : 'GET',\n            url     : refererURL,\n            // 500系以外は正常として扱う（thenで処理できるようにする）.\n            validateStatus: function (status) {\n                return status < 500;\n            },\n\n        })\n        .then(function (response) {\n        \tif(response.status === 404){\n\n        \t\t//Debug用出力ログ\n        \t\t//console.log(response);\n                //parent.message = response.data.status + \":\" + response.data.error + \":\" + response.data.message;\n\n                //404エラーページに遷移\n                parent.$router.push(\"/404\")\n\n        \t}else{\n\n        \t\tconsole.log(response);\n\n\n        \t}\n        })\n        .catch(function (error) {\n        \tconsole.log(error);\n        \tparent.message = error.message;\n        });\n\n\n    },\n\n    handleClick: function(event){\n\n  \t//this.refererURL =\"http://fusetter.com//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n  \tvar refererURL =\"https://fusetter.com//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n\n  \taxios({\n          method  : 'GET',\n          url     : refererURL,\n          // 500系以外は正常として扱う（thenで処理できるようにする）.\n          validateStatus: function (status) {\n              return status < 500;\n          },\n      })\n      .then(function (response) {\n      \tif(response.status === 404){\n\n      \t\t//Debug用出力ログ\n      \t\t//console.log(response);\n              //parent.message = response.data.status + \":\" + response.data.error + \":\" + response.data.message;\n\n              //404エラーページに遷移\n              parent.$router.push(\"/404\")\n\n      \t}else{\n\n      \t\tconsole.log(response);\n\n      \t\t//location.href=response.data;\n      \t\tlocation.href=response.data.URL;\n\n      \t}\n      })\n      .catch(function (error) {\n      \tconsole.log(error);\n      \tparent.message = error.message;\n      });\n\n    }\n\n  },\n\n\n\n\n\n}\n",{"version":3,"sources":["tw.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;AAMA","file":"tw.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\n<div class=\"wrapper\">\n\t<div class=\"wrapper_inner\">\n\t\t<div class=\"fse_box fse_lock\">\n\n\t\t\t<div class=\"fse_message\">{{ message }}</div>\n\n\t\t</div>\n\n\t\t<!-- 認証メッセージ -->\n\t\t<div class=\"fse_lock_message\">\n\t\t\t<img src=\"../img/lock.png\">\n\t\t\t<div>\n\t\t\t\t日本語べた打ち：伏せられた内容を見るには、Twitterの認証が必要です。</BR>\n\t\t\t\t伏せ字ツイートの公開範囲によっては、見られない場合もあります。\n\t\t\t</div>\n\n\t\t\t<div class=\"fse_buttons\">\n\t\t\t\t<a href=\"\">連携アプリの認証が不安な方は、こちらをお読みください</a><br>\n\t\t\t\t<!-- <a class=\"button\" v-bind:href=\"refererURL\">伏せられた内容を見る！</a> -->\n\t\t\t\t<a class=\"button\" v-on:click=\"handleClick()\">伏せられた内容を見る！</a>\n\t\t\t\t<a class=\"button\" v-on:click=\"logoutClick()\">ログアウト</a>\n\t\t\t</div>\n\t\t</div>\n\n\n\n\t</div>\n\n</div>\n\n\n</template>\n\n<script>\n\n  import axios from 'axios'\n\n\n  export default {\n\n    name: \"message\",\n    data () {\n      return {\n        message: '',\n        //refererURL : \"/\"\n      }\n    },\n    created: async function () {\n      await this.refresh()\n    },\n    methods: {\n\n\n      refresh: async function () {\n\n        var fsgCryptogram = this.$route.params.fsgCryptogram;\n        //this.refererURL =\"http://localhost:8888//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n        //this.refererURL =\"http://fusetter.com//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n\n\n        //TODO ${fsgCryptogram}で書き換えられそう\n        var base_url = 'http://localhost:8888//FussageGetByFsgCryptogram//'\n        var forwardUrl = base_url + fsgCryptogram;\n\n        //TODO ここ共通関数化する。自作エラーのみ（JSONにメッセージがあるとか）\n        var parent = this;\n        axios({\n            method  : 'GET',\n            url     : forwardUrl,\n            // 500系以外は正常として扱う（thenで処理できるようにする）.\n            validateStatus: function (status) {\n                return status < 500;\n            },\n        })\n        .then(function (response) {\n        \tif(response.status === 404){\n\n        \t\t//Debug用出力ログ\n        \t\t//console.log(response);\n                //parent.message = response.data.status + \":\" + response.data.error + \":\" + response.data.message;\n\n                //404エラーページに遷移\n                parent.$router.push(\"/404\")\n\n        \t}else{\n        \t\tconsole.log(response);\n\n        \t\tif(response.data.show_auth){\n\n                \tparent.message = response.data.turnTweet\n\n        \t\t}else{\n\n        \t\t\tparent.message = response.data.originalTweet\n\n        \t\t}\n\n        \t}\n        })\n        .catch(function (error) {\n        \tconsole.log(error);\n        \tparent.message = error.message;\n        });\n\n      },\n\n      logoutClick: function(event){\n\n      \tvar refererURL =\"http://localhost:8888//logout?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n\n      \taxios({\n              method  : 'GET',\n              url     : refererURL,\n              // 500系以外は正常として扱う（thenで処理できるようにする）.\n              validateStatus: function (status) {\n                  return status < 500;\n              },\n\n          })\n          .then(function (response) {\n          \tif(response.status === 404){\n\n          \t\t//Debug用出力ログ\n          \t\t//console.log(response);\n                  //parent.message = response.data.status + \":\" + response.data.error + \":\" + response.data.message;\n\n                  //404エラーページに遷移\n                  parent.$router.push(\"/404\")\n\n          \t}else{\n\n          \t\tconsole.log(response);\n\n\n          \t}\n          })\n          .catch(function (error) {\n          \tconsole.log(error);\n          \tparent.message = error.message;\n          });\n\n\n      },\n\n      handleClick: function(event){\n\n    \t//this.refererURL =\"http://fusetter.com//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n    \tvar refererURL =\"https://fusetter.com//auth?r=\"+unescape(encodeURIComponent(this.$route.fullPath));\n\n    \taxios({\n            method  : 'GET',\n            url     : refererURL,\n            // 500系以外は正常として扱う（thenで処理できるようにする）.\n            validateStatus: function (status) {\n                return status < 500;\n            },\n        })\n        .then(function (response) {\n        \tif(response.status === 404){\n\n        \t\t//Debug用出力ログ\n        \t\t//console.log(response);\n                //parent.message = response.data.status + \":\" + response.data.error + \":\" + response.data.message;\n\n                //404エラーページに遷移\n                parent.$router.push(\"/404\")\n\n        \t}else{\n\n        \t\tconsole.log(response);\n\n        \t\t//location.href=response.data;\n        \t\tlocation.href=response.data.URL;\n\n        \t}\n        })\n        .catch(function (error) {\n        \tconsole.log(error);\n        \tparent.message = error.message;\n        });\n\n      }\n\n    },\n\n\n\n\n\n  }\n</script>\n\n<style scoped>\n</style>"]}]}